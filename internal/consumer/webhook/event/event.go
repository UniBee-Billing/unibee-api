package event

type MerchantWebhookEvent string

const (
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_CREATED                   = "subscription.created"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_UPDATED                   = "subscription.updated"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_CANCELLED                 = "subscription.cancelled"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_TRACK                     = "subscription.track" // 3 days before period end
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_TRACK_WILLCANCEL          = "subscription.track.willcancel"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_TRACK_USER_OUTOFSUBSCRIBE = "subscription.track.user.outofsubscribe" // track will cancel at period end
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_INVOICE_TRACK             = "subscription.latest_invoice.track"      // pending every day at 3 days before period end
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_EXPIRED                   = "subscription.expired"

	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_CREATED   = "subscription.onetime_addon.created"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_SUCCESS   = "subscription.onetime_addon.success"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_CANCELLED = "subscription.onetime_addon.cancelled"
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_EXPIRED   = "subscription.onetime_addon.expired"

	UNIBEE_WEBHOOK_EVENT_USER_METRIC_UPDATED = "user.metric.update"

	UNIBEE_WEBHOOK_EVENT_PAYMENT_CREATED        = "payment.created"
	UNIBEE_WEBHOOK_EVENT_PAYMENT_NEEDAUTHORISED = "payment.authorised.need"
	UNIBEE_WEBHOOK_EVENT_PAYMENT_SUCCESS        = "payment.success"
	UNIBEE_WEBHOOK_EVENT_PAYMENT_CANCEL         = "payment.cancelled"
	UNIBEE_WEBHOOK_EVENT_PAYMENT_FAILURE        = "payment.failure"
	UNIBEE_WEBHOOK_EVENT_REFUND_CREATED         = "refund.created"
	UNIBEE_WEBHOOK_EVENT_REFUND_SUCCESS         = "refund.success"
	UNIBEE_WEBHOOK_EVENT_REFUND_FAILURE         = "refund.failure"
	UNIBEE_WEBHOOK_EVENT_REFUND_CANCELLED       = "refund.cancelled"
	UNIBEE_WEBHOOK_EVENT_REFUND_REVERSE         = "refund.reverse"
)

var ListeningEventList = []string{
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_CREATED,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_UPDATED,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_CANCELLED,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_TRACK,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_TRACK_WILLCANCEL,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_TRACK_USER_OUTOFSUBSCRIBE,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_INVOICE_TRACK,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_EXPIRED,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_CREATED,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_SUCCESS,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_CANCELLED,
	UNIBEE_WEBHOOK_EVENT_SUBSCRIPTION_ONETIME_ADDON_EXPIRED,
	UNIBEE_WEBHOOK_EVENT_USER_METRIC_UPDATED,
	UNIBEE_WEBHOOK_EVENT_PAYMENT_CREATED,
	UNIBEE_WEBHOOK_EVENT_PAYMENT_NEEDAUTHORISED,
	UNIBEE_WEBHOOK_EVENT_PAYMENT_SUCCESS,
	UNIBEE_WEBHOOK_EVENT_PAYMENT_CANCEL,
	UNIBEE_WEBHOOK_EVENT_PAYMENT_FAILURE,
	UNIBEE_WEBHOOK_EVENT_REFUND_CREATED,
	UNIBEE_WEBHOOK_EVENT_REFUND_SUCCESS,
	UNIBEE_WEBHOOK_EVENT_REFUND_FAILURE,
	UNIBEE_WEBHOOK_EVENT_REFUND_CANCELLED,
	UNIBEE_WEBHOOK_EVENT_REFUND_REVERSE,
}

func WebhookEventInListeningEvents(target MerchantWebhookEvent) bool {
	if len(target) <= 0 {
		return false
	}
	for _, event := range ListeningEventList {
		if event == string(target) {
			return true
		}
	}
	return false
}
